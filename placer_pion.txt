private static Paire paireAligneePersonnel;
private static Ligne ligneDeQuatreAdversaire;
private static Emplacement espace;
private int nbDuTour; 

class Combinaison{
	//...
}

class Paire extends Combinaison{
	//...
}

class Ligne extends Combinaison{
	//...
}

class Emplacement{
	//...
}

private void placer_pion{
	if(nbTenaillesAdversaire > 2){ // Nombre de tenailles qu'on s'est fait manger
		if(isPaireAligneeIsoleePersonnel()){
			placer_pion_sur_extremite(paireAligneePersonnel);
		}
	}else if(nbTenaillesPersonnel > 2){
		// TO DO : Forcer l’adversaire à former des paires “mangeables” (pour faire les deux tenailles manquantes)
	}else{
		if(isLigneDeQuatre()) // ok
			placer_pion(pointX,pointY);
		else if(isDeuxPionsEspaceDeuxPions()) // ok
			placer_pion(espace);
		else if(isTroisPionsEspacePion()) // ok
			placer_pion(espace);
		else if(isDeuxPionsEspacePion()) // ok
			placer_pion(espace);
		else if(isLigneDeTroisPersonnel()) // ok
			placer_pion_sur_extremite(ligneDeTroisIsoleePersonnel);
		else if(isLigneDeTroisAdversaire()) // ok
			placer_pion_sur_extremite(ligneDeTroisIsoleeAdversaire);
		else if(isLigneDeDeuxPersonnel()) // ok
			placer_pion_sur_extremite(ligneDeDeuxPersonnel);
		else{
			if(isPaireMangeableAdversaire()) // ok
				placer_pion_sur_extremite(paireMangeableAdversaire);
			else if(isPaireFormablePersonnel()) // ok
				placer_pion_sur_extremite(pion);
			else
				placer_pion_random_nique_sa_merrrrrrrrrrrr();
		}
	}
}

private void placer_pion(pointX, pointY){
	if(nbDuTour == 0){
		// Jouer sur l'intersection centrale
	}else if(nbDuTour=2){
		// Jouer dans la zone 5x5
	}else{
		//...
	}
}

private void placer_pion_sur_extremite(Combinaison combinaison){
	if(nbDuTour == 0){
		// Jouer sur l'intersection centrale
	}else if(nbDuTour=2){
		// Jouer dans la zone 5x5
	}else{
		//...
	}
}

//......