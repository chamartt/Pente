private static Paire paireAligneePersonnel;
private static Ligne ligneDeQuatreAdversaire;
private static Emplacement espace;
private int nbDuTour; 

class Combinaison{
	//...
}

class Paire extends Combinaison{
	//...
}

class Ligne extends Combinaison{
	//...
}

class Emplacement{
	//...
}


// Utilisations de else if car on ne peut pas faire plus de 1x placer_pion()
private void placer_pion{
	if(nbTenaillesAdversaire > 2){ // Nombre de tenailles qu'on s'est fait manger
		if(isPaireAligneeIsoleePersonnel()){
			placer_pion_sur_extremite(paireAligneePersonnel);
		}
	}else if(nbTenaillesPersonnel > 2){
		// TO DO : Forcer l’adversaire à former des paires “mangeables” (pour faire les deux tenailles manquantes)
	}else{
		if(isLigneDeQuatreAdversaire())
			placer_pion_sur_extremite(ligneDeQuatreAdversaire);
		else if(isTroisPionsEspacePion())
			placer_pion(espace);
		else if(isDeuxPionsEspacePion())
			placer_pion(espace);
		else if(isLigneDeQuatrePersonnel())
			placer_pion_sur_extremite(ligneDeQuatrePersonnel);
		else if(isLigneDeTroisPersonnel())
			placer_pion_sur_extremite(ligneDeTroisIsoleePersonnel);
		else if(isLigneDeTroisAdversaire())
			placer_pion_sur_extremite(ligneDeTroisIsoleeAdversaire);
		else if(isLigneDeDeuxPersonnel()){
			if(isLigneDeDeuxAdversaire())
				placer_pion_sur_extremite(ligneDeDeuxAdversaire);
			else
				placer_pion_sur_extremite(ligneDeDeuxPersonnel);
		}else{
			if(isPaireMangeableAdversaire())
				placer_pion_sur_extremite(paireMangeableAdversaire);
			else if(isPaireFormable())
				placer_pion_sur_extremite(pion);
			else
				placer_pion_random_nique_sa_merrrrrrrrrrrr();
		}
	}
}

private void placer_pion(Emplacement emplacement){
	if(nbDuTour=2 && premierJoueur()){
		// Jouer dans la zone 5x5
	}else{
		//...
	}
}

private void placer_pion_sur_extremite(Combinaison combinaison){
	if(nbDuTour=2 && premierJoueur()){
		// Jouer dans la zone 5x5
	}else{
		//...
	}
}

private void isPaireAligneeIsoleePersonnel(){
	// Traitement
	// ...

	paireAligneePersonnel = resultat_traitement;
}

private void isLigneDeQuatreAdversaire(){
	// Traitement
	// ...
	
	ligneDeQuatreAdversaire = resultat_traitement;
}

//......